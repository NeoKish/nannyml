.. _glossary:

========
Glossary
========

.. glossary::

    Alert
        An alert refers to a variable at a particular chunk that gets flagged for possible data
        drift. The alert is raised after the drift functionality of NannyML finds the drift
        characteristics for this variable and chunk to be suspect.

    Butterfly dataset
        A dataset used in :ref:`data-reconstruction-pca` to give an example where univariate
        drift statistics are insufficient in detecting complex data drifts in multidimensional
        data.

    CBPE (Confidence-Based Perofmance Estimation)
        A family of methods to estimate model performance in the absence of ground truth that take advantage of the
        confidence which is expressed in the monitored model output probability/score prediction.

    Concept Drift
        A change in the underlying pattern (or mapping) between the :term:`Model Inputs` and the :term:`Target` (P(y|X)).

    Data Drift
        A change in joint distribution of :term:`Model Inputs` (P(X)).

    Data Chunk
        Data chunk is simply a sample of data. All the results generated by NannyML are calculated and presented on the
        level of chunk i.e. a chunk is a single data point on the monitoring results. Chunks are usually created based on time
        periods - they contain all the observations and predictions from single hour, day, month etc. depending on
        the selected interval. They can be also size-based so that each chunk contains *n* observations, or
        number-based so the whole data is splt into *k* chunks. In each case chronology of data between chunks is
        maintained.

    Feature
        A variable used by our machine learning model. The model inputs consist of features.

    Latent space
        A space of reduced dimensionality, compared to the model input space, that can
        represent our input data. This space is the result of a representation
        learning algorithm. Data points that are close together in the model input space
        are also close together in the latent space.

    Ground truth
        A synonym for :term:`Target`

    Identifier
        Usually a single column, but can be multiple columns where necessary. It is used uniquely identify an observation.
        When providing :term:`Target` data at a later point in time, this value can help refer back to the original prediction.

        Being able to uniquely identify each row of data can help reference any particular issues NannyML might identify
        and make resolving issues easier for you. As we add functionality to provide ``target`` data afterwards your data
        will already be in the correct shape to support it!

        .. note::
            **Format**
                No specific format. Any str or int value is possible.

            **Candidates**
                An existing identifier from your business case.
                A technical identifier such as a globally unique identifier (GUID).
                A hash of some (or all) of your column values, using a hashing function with appropriate collision properties, e.g. the SHA-2 and SHA-3 families.
                A concatenation of your dataset name and a row number.

    Imputation
        The process of substituting missing values with actual values on a dataset.

    Model
        Definition of a model.

    Model inputs
        Every :term:`Feature` used by the model.

    Model Metadata
        Additional information regarding the model inputs such as the type of a particular
        feature (continuous, categorical, nominal, ordinal). Information regarding when a
        prediction was made as well as which data partition it is assigned to are also considered
        metadata.

    Model outputs
        The scores or probabilities that your model predicts for its target outcome.

    Model predictions
        A synonym for :term:`Model outputs`.


    Multivariate Drift Detection
        Drift Detection steps that involve all the features of our model in order to
        create appropriate drift measures.

    Partition
        A column that tells us what partition the data is in. We will expect data be in one of two partitions.

        The first one is called the ``reference`` partition. It contains all the observations for a period with an *accepted*
        level of performance. It most likely also includes ``target`` data.

        The second partition is the ``analysis`` partition. It contains the observations you want NannyML to analyse.
        It is likely that performance here will be (partially) estimated.

        NannyML needs the partition information to understand which data it can use as a reference to compare other periods by.

        .. warning::
            We currently only support the following partition values: ``reference`` and ``analysis``.

            Please map your own values to them accordingly.

    PCA
        Principal Component Analysis. A method used for dimensionality reduction.

    Performance Estimation
        Estimating performance of a deployed ML model without having access to :term:`Target`.

    Predictions
        A synonym for :term:`Model outputs`.

    Reconstruction Error
        The average euclidean distance between the original and the reconstructed data points in a dataset.

    Target
        The actual outcome of the event the machine learning model is trying to predict.

    Timestamp
        Usually a single column, but can be multiple columns where necessary.
        This provides NannyML with the date and time that the prediction was made.

        NannyML need to understand when predictions were made, and how you record this,
        so it can bucket observations in time periods.

        .. note::
            **Format**
                Any format supported by Pandas, most likely:

                - *ISO 8601*, e.g. ``2021-10-13T08:47:23Z``
                - *Unix-epoch* in units of seconds, e.g. ``1513393355``

    Univariate Drift Detection
        Drift Detection methods that use each feature of our model individually
        in order to detect change in :term:`Model Inputs`.
